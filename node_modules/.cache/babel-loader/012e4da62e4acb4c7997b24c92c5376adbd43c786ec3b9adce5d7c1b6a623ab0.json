{"ast":null,"code":"var _jsxFileName = \"/home/sachamrt/projects/my_extension/src/WebPlayback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst track = {\n  name: \"\",\n  album: {\n    images: [{\n      url: \"\"\n    }]\n  },\n  artists: [{\n    name: \"\"\n  }]\n};\nfunction WebPlayback(props) {\n  _s();\n  const [device, setDevice] = useState(\"\");\n  const [player, setPlayer] = useState(undefined);\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [current_track, setTrack] = useState(track);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'My_extension',\n        getOAuthToken: cb => {\n          cb(props.token);\n        },\n        volume: 0.5\n      });\n      setPlayer(player);\n      player.connect().then(success => {\n        if (success) {\n          console.log('The Web Playback SDK successfully connected to Spotify!');\n        }\n      });\n      player.addListener('ready', _ref => {\n        let {\n          device_id\n        } = _ref;\n        console.log('Ready with Device ID', device_id);\n      });\n      player.addListener('not_ready', _ref2 => {\n        let {\n          device_id\n        } = _ref2;\n        console.log('Device ID has gone offline', device_id);\n      });\n      player.addListener('player_state_changed', state => {\n        if (!state) {\n          return;\n        }\n        setTrack(state.track_window.current_track);\n        setPaused(state.paused);\n        player.getCurrentState().then(state => {\n          !state ? setActive(false) : setActive(true);\n        });\n      });\n      player.connect();\n    };\n  }, []);\n\n  // const getDevice = async () => {\n  //     const response = await axios.get('https://api.spotify.com/v1/me/player/devices', {\n  //         headers: {\n  //             Authorization: `Bearer ${props.token}`\n  //         }\n  //     });\n  //     setDevice(response.device.item);\n  // }\n\n  // const renderDevice = () => {\n  //     if (device) {\n  //         return device.map(device => (\n  //             <div key={device.id}>\n  //                 { <p>{device.name}</p>}\n  //                 { <p>{device.type}</p>}\n  //             </div>\n  //         ))\n  //     } else {\n  //         return <p>No device found</p>\n  //     }\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <div className='App'>\n    //     <header className='App-header'>\n    //     <h1>Web Playback</h1>\n    //     <button className='btn-spotify'>Play</button>\n    //     {renderDevice()}\n    //     </header>\n    //  </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: current_track.album.images[0].url,\n              className: \"now-playing__cover\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"now-playing__name\",\n                children: current_track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"now-playing__artist\",\n                children: current_track.artists[0].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.previousTrack();\n                },\n                children: \"<<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.togglePlay();\n                },\n                children: is_paused ? \"PLAY\" : \"PAUSE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.nextTrack();\n                },\n                children: \">>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(WebPlayback, \"na1nE+BNu0nixdnhPUgIIjVnqEI=\");\n_c = WebPlayback;\nexport default WebPlayback;\nvar _c;\n$RefreshReg$(_c, \"WebPlayback\");","map":{"version":3,"names":["React","useState","useEffect","axios","track","name","album","images","url","artists","WebPlayback","props","device","setDevice","player","setPlayer","undefined","is_paused","setPaused","is_active","setActive","current_track","setTrack","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","cb","token","volume","connect","then","success","console","log","addListener","device_id","state","track_window","paused","getCurrentState","previousTrack","togglePlay","nextTrack"],"sources":["/home/sachamrt/projects/my_extension/src/WebPlayback.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst track = {\n    name: \"\",\n    album: {\n        images: [\n            { url: \"\" }\n        ]\n    },\n    artists: [\n        { name: \"\" }\n    ]\n}\n\nfunction WebPlayback(props) {\n\n    const [device, setDevice] = useState(\"\");\n    const [player, setPlayer] = useState(undefined);\n    const [is_paused, setPaused] = useState(false);\n    const [is_active, setActive] = useState(false);\n    const [current_track, setTrack] = useState(track);\n\n    useEffect(() => {\n\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n\n            const player = new window.Spotify.Player({\n                name: 'My_extension',\n                getOAuthToken: cb => { cb(props.token); },\n                volume: 0.5\n            });\n\n            setPlayer(player);\n\n            player.connect().then(success => {\n                if (success) {\n                    console.log('The Web Playback SDK successfully connected to Spotify!');\n                }\n            });\n\n            player.addListener('ready', ({ device_id }) => {\n                console.log('Ready with Device ID', device_id);\n            });\n            \n            player.addListener('not_ready', ({ device_id }) => {\n                console.log('Device ID has gone offline', device_id);\n            });\n\n            player.addListener('player_state_changed', ( state => {\n\n                if (!state) {\n                    return;\n                }\n            \n                setTrack(state.track_window.current_track);\n                setPaused(state.paused);\n            \n                player.getCurrentState().then( state => {\n                    (!state)? setActive(false): setActive(true);\n                });\n            }));\n\n            player.connect();\n        };\n    }, []);\n\n    // const getDevice = async () => {\n    //     const response = await axios.get('https://api.spotify.com/v1/me/player/devices', {\n    //         headers: {\n    //             Authorization: `Bearer ${props.token}`\n    //         }\n    //     });\n    //     setDevice(response.device.item);\n    // }\n\n    // const renderDevice = () => {\n    //     if (device) {\n    //         return device.map(device => (\n    //             <div key={device.id}>\n    //                 { <p>{device.name}</p>}\n    //                 { <p>{device.type}</p>}\n    //             </div>\n    //         ))\n    //     } else {\n    //         return <p>No device found</p>\n    //     }\n    // }\n\n    return (\n        // <div className='App'>\n        //     <header className='App-header'>\n        //     <h1>Web Playback</h1>\n        //     <button className='btn-spotify'>Play</button>\n        //     {renderDevice()}\n        //     </header>\n        //  </div>\n        <>\n        <body>\n            <div className=\"container\">\n                <div className=\"main-wrapper\">\n                    <img src={current_track.album.images[0].url} \n                        className=\"now-playing__cover\" alt=\"\" />\n    \n                    <div className=\"now-playing__side\">\n                        <div className=\"now-playing__name\">{current_track.name}</div>\n                        <div className=\"now-playing__artist\">{current_track.artists[0].name}</div>\n\n                        <button className=\"btn-spotify\" onClick={() => { player.previousTrack() }} >\n                            &lt;&lt;\n                        </button>\n\n                        <button className=\"btn-spotify\" onClick={() => { player.togglePlay() }} >\n                            { is_paused ? \"PLAY\" : \"PAUSE\" }\n                        </button>\n\n                        <button className=\"btn-spotify\" onClick={() => { player.nextTrack() }} >\n                            &gt;&gt;\n                        </button>\n                        {/* {renderDevice()} */}\n                    </div>\n                </div>\n            </div>\n        </body>\n     </>\n    );\n}\n\nexport default WebPlayback\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}