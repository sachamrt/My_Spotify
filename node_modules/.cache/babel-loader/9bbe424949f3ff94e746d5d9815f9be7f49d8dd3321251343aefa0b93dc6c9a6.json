{"ast":null,"code":"var _jsxFileName = \"/home/sachamrt/projects/my_extension/src/WebPlayback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst track = {\n  name: \"\",\n  album: {\n    images: {\n      url: \"\"\n    }\n  },\n  artists: {\n    name: \"\"\n  }\n};\nfunction WebPlayback(props) {\n  _s();\n  const [player, setPlayer] = useState(undefined);\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [current_track, setTrack] = useState(track);\n  const [device, setDevice] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [Track, setCurTrack] = useState([]);\n  const [playbackState, setPlaybackState] = useState([]);\n\n  // const getDevice = async () => {\n  //     const response = await axios.get('https://api.spotify.com/v1/me/player/devices', {\n  //         headers: {\n  //             Authorization: `Bearer ${props.token}`\n  //         }\n  //     });\n  //     setDevice(response.data.devices);\n  // }\n\n  // const getplayingTrack = async () => {\n  //     const response = await axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n  //         headers: {\n  //             Authorization: `Bearer ${props.token}`\n  //         }\n  //     });\n  //     setCurTrack(response.data.item);\n  // }\n\n  const PlayState = async () => {\n    const response = await axios.get('https://api.spotify.com/v1/me/player', {\n      headers: {\n        Authorization: `Bearer ${props.token}`\n      }\n    });\n    // console.log('PlayState', response.data)\n    setPlaybackState(response.data);\n  };\n  const playButton = async () => {\n    const response = await axios.put('https://api.spotify.com/v1/me/player/play', {\n      headers: {\n        Authorization: `Bearer ${props.token}`\n      }\n    });\n  };\n  const toggle = () => setIsOpen(!isOpen);\n\n  // getplayingTrack();\n\n  useEffect(() => {\n    // const script = document.createElement(\"script\");\n    // script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    // script.async = true;\n\n    // document.body.appendChild(script);\n\n    // window.onSpotifyWebPlaybackSDKReady = () => {\n\n    //     const player = new window.Spotify.Player({\n    //         name: 'My_extension',\n    //         getOAuthToken: cb => { cb(props.token); },\n    //         volume: 0.3\n    //     });\n\n    //     setPlayer(player);\n\n    //     player.connect().then(success => {\n    //         if (success) {\n    //             console.log('The Web Playback SDK successfully connected to Spotify!');\n    //         }\n    //     });\n\n    //     player.addListener('ready', ({ device_id }) => {\n    //         console.log('Ready with Device ID', device_id);\n    //     });\n\n    //     player.addListener('not_ready', ({ device_id }) => {\n    //         console.log('Device ID has gone offline', device_id);\n    //     });\n\n    //     player.addListener('player_state_changed', ( state => {\n    //         if (!state) {\n    //             return;\n    //         }\n\n    //         setTrack(state.track_window.current_track);\n    //         setPaused(state.paused);\n\n    //         player.getCurrentState().then( state => {\n    //             (!state)? setActive(false): setActive(true);\n    //         });\n    //     }));\n\n    //     player.connect();\n    // };\n    // console.log('Track', Track)\n    // getDevice();\n    PlayState();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: playbackState.item.album.images[0].url,\n              className: \"now-playing__cover\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"now-playing__name\",\n                children: playbackState.item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"now-playing__artist\",\n                children: playbackState.item.artists[0].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.previousTrack();\n                },\n                children: \"<<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  playButton();\n                },\n                children: is_paused ? \"PLAY\" : \"PAUSE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.nextTrack();\n                },\n                children: \">>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s(WebPlayback, \"bSTTgKc7F7fsnZiff9ZCvF7wvwU=\");\n_c = WebPlayback;\nexport default WebPlayback;\nvar _c;\n$RefreshReg$(_c, \"WebPlayback\");","map":{"version":3,"names":["React","useState","useEffect","axios","Dropdown","track","name","album","images","url","artists","WebPlayback","props","player","setPlayer","undefined","is_paused","setPaused","is_active","setActive","current_track","setTrack","device","setDevice","isOpen","setIsOpen","Track","setCurTrack","playbackState","setPlaybackState","PlayState","response","get","headers","Authorization","token","data","playButton","put","toggle","item","previousTrack","nextTrack"],"sources":["/home/sachamrt/projects/my_extension/src/WebPlayback.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Dropdown } from 'react-bootstrap';\n\nconst track = {\n    name: \"\",\n    album: {\n        images: {\n            url: \"\"\n        }\n    },\n    artists: {\n        name: \"\"\n    }\n}\n\nfunction WebPlayback(props) {\n\n    const [player, setPlayer] = useState(undefined);\n    const [is_paused, setPaused] = useState(false);\n    const [is_active, setActive] = useState(false);\n    const [current_track, setTrack] = useState(track);\n    const [device, setDevice] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [Track, setCurTrack] = useState([]);\n    const [playbackState, setPlaybackState] = useState([]);\n\n    // const getDevice = async () => {\n    //     const response = await axios.get('https://api.spotify.com/v1/me/player/devices', {\n    //         headers: {\n    //             Authorization: `Bearer ${props.token}`\n    //         }\n    //     });\n    //     setDevice(response.data.devices);\n    // }\n\n    // const getplayingTrack = async () => {\n    //     const response = await axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n    //         headers: {\n    //             Authorization: `Bearer ${props.token}`\n    //         }\n    //     });\n    //     setCurTrack(response.data.item);\n    // }\n\n    const PlayState = async () => {\n        const response = await axios.get('https://api.spotify.com/v1/me/player', {\n            headers: {\n                Authorization: `Bearer ${props.token}`\n            }\n        });\n        // console.log('PlayState', response.data)\n        setPlaybackState(response.data);\n    }\n\n    const playButton = async () => {\n        const response = await axios.put('https://api.spotify.com/v1/me/player/play', {\n            headers: {\n                Authorization: `Bearer ${props.token}`\n            }\n        });\n    }\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    // getplayingTrack();\n    \n    useEffect(() => {\n        \n        // const script = document.createElement(\"script\");\n        // script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        // script.async = true;\n\n        // document.body.appendChild(script);\n\n        // window.onSpotifyWebPlaybackSDKReady = () => {\n            \n            //     const player = new window.Spotify.Player({\n        //         name: 'My_extension',\n        //         getOAuthToken: cb => { cb(props.token); },\n        //         volume: 0.3\n        //     });\n        \n        //     setPlayer(player);\n        \n        //     player.connect().then(success => {\n        //         if (success) {\n        //             console.log('The Web Playback SDK successfully connected to Spotify!');\n        //         }\n        //     });\n        \n        //     player.addListener('ready', ({ device_id }) => {\n        //         console.log('Ready with Device ID', device_id);\n        //     });\n            \n        //     player.addListener('not_ready', ({ device_id }) => {\n        //         console.log('Device ID has gone offline', device_id);\n        //     });\n        \n        //     player.addListener('player_state_changed', ( state => {\n        //         if (!state) {\n        //             return;\n        //         }\n            \n        //         setTrack(state.track_window.current_track);\n        //         setPaused(state.paused);\n            \n        //         player.getCurrentState().then( state => {\n        //             (!state)? setActive(false): setActive(true);\n        //         });\n        //     }));\n        \n        //     player.connect();\n        // };\n        // console.log('Track', Track)\n        // getDevice();\n        PlayState();\n    }, []);\n\n    return (\n        <html>\n            <header className=\"App-header\">\n            <body className='App'>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n                        <img src={playbackState.item.album.images[0].url} \n                            className=\"now-playing__cover\" alt=\"\" />\n            \n                        <div className=\"now-playing__side\">\n                            <div className=\"now-playing__name\">{playbackState.item.name}</div>\n                            <div className=\"now-playing__artist\">{playbackState.item.artists[0].name}</div>\n\n                                <button className=\"btn-spotify\" onClick={() => { player.previousTrack() }} >\n                                    &lt;&lt;\n                                </button>\n                                <button className=\"btn-spotify\" onClick={() => { playButton() }} >\n                                    { is_paused ? \"PLAY\" : \"PAUSE\" }\n                                </button>\n\n                                <button className=\"btn-spotify\" onClick={() => { player.nextTrack() }} >\n                                    &gt;&gt;\n                                </button>\n                            </div>\n                    </div>\n                </div>\n            </body>\n            </header>\n         </html>\n    );\n}\n\nexport default WebPlayback\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}