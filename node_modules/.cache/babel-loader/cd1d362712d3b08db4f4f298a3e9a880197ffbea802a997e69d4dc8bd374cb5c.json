{"ast":null,"code":"var _jsxFileName = \"/home/sachamrt/projects/my_extension/src/WebPlayback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst track = {\n  name: \"\",\n  album: {\n    images: [{\n      url: \"\"\n    }]\n  },\n  artists: [{\n    name: \"\"\n  }]\n};\nfunction WebPlayback(props) {\n  _s();\n  const [player, setPlayer] = useState(undefined);\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [current_track, setTrack] = useState(track);\n  const [device, setDevice] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [Track, setCurTrack] = useState([]);\n  const [playbackState, setPlaybackState] = useState({});\n  const getDevice = async () => {\n    const response = await axios.get('https://api.spotify.com/v1/me/player/devices', {\n      headers: {\n        Authorization: `Bearer ${props.token}`\n      }\n    });\n    setDevice(response.data.devices);\n  };\n  const getplayingTrack = async () => {\n    const response = await axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n      headers: {\n        Authorization: `Bearer ${props.token}`\n      }\n    });\n    setCurTrack(response.data.item);\n  };\n  const PlayState = async () => {\n    const response = await axios.get('https://api.spotify.com/v1/me/player', {\n      headers: {\n        Authorization: `Bearer ${props.token}`\n      }\n    });\n    console.log('PlayState', response.data);\n    setPlaybackState('state', response.data);\n  };\n  const toggle = () => setIsOpen(!isOpen);\n\n  // getplayingTrack();\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'My_extension',\n        getOAuthToken: cb => {\n          cb(props.token);\n        },\n        volume: 0.3\n      });\n      setPlayer(player);\n      player.connect().then(success => {\n        if (success) {\n          console.log('The Web Playback SDK successfully connected to Spotify!');\n        }\n      });\n      player.addListener('ready', _ref => {\n        let {\n          device_id\n        } = _ref;\n        console.log('Ready with Device ID', device_id);\n      });\n      player.addListener('not_ready', _ref2 => {\n        let {\n          device_id\n        } = _ref2;\n        console.log('Device ID has gone offline', device_id);\n      });\n      player.addListener('player_state_changed', state => {\n        if (!state) {\n          return;\n        }\n        setTrack(state.track_window.current_track);\n        setPaused(state.paused);\n        player.getCurrentState().then(state => {\n          !state ? setActive(false) : setActive(true);\n        });\n      });\n      player.connect();\n    };\n    getDevice();\n    PlayState();\n    // if (Track) {\n    //     setTrack(Track);\n    // }\n    // console.log('Track', Track)\n  }, []);\n\n  // const renderDevice = () => {\n  //     // return device.map(devices => (\n  //     //     <div key={devices.id}>\n  //     //         { <p>{devices.name}</p>}\n  //     //         { <p>{devices.type}</p>}\n  //     //     </div>\n  //     // ))\n  //     return <div>\n  //         <Dropdown onClick={toggle}>\n  //         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n  //             Devices\n  //         </Dropdown.Toggle>\n  //         <Dropdown.Menu open={isOpen}>\n  //             {device.map((device) => (\n  //             <Dropdown.Item clakey={device.id}>\n  //                 {device.name} ({device.type})\n  //             </Dropdown.Item>\n  //             ))}\n  //         </Dropdown.Menu>\n  //         </Dropdown>\n  //   </div>\n  // }\n\n  // console.log('deviceHEHE', device)\n  // console.log('Track', Track)\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: current_track.album.images[0].url,\n              className: \"now-playing__cover\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__side\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"now-playing__name\",\n                children: current_track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"now-playing__artist\",\n                children: current_track.artists[0].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.previousTrack();\n                },\n                children: \"<<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.togglePlay();\n                },\n                children: is_paused ? \"PLAY\" : \"PAUSE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-spotify\",\n                onClick: () => {\n                  player.nextTrack();\n                },\n                children: \">>\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(WebPlayback, \"51+DV8m1EQ+RenfxeTvKR1hZCz0=\");\n_c = WebPlayback;\nexport default WebPlayback;\nvar _c;\n$RefreshReg$(_c, \"WebPlayback\");","map":{"version":3,"names":["React","useState","useEffect","axios","Dropdown","track","name","album","images","url","artists","WebPlayback","props","player","setPlayer","undefined","is_paused","setPaused","is_active","setActive","current_track","setTrack","device","setDevice","isOpen","setIsOpen","Track","setCurTrack","playbackState","setPlaybackState","getDevice","response","get","headers","Authorization","token","data","devices","getplayingTrack","item","PlayState","console","log","toggle","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","cb","volume","connect","then","success","addListener","device_id","state","track_window","paused","getCurrentState","previousTrack","togglePlay","nextTrack"],"sources":["/home/sachamrt/projects/my_extension/src/WebPlayback.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Dropdown } from 'react-bootstrap';\n\nconst track = {\n    name: \"\",\n    album: {\n        images: [\n            { url: \"\" }\n        ]\n    },\n    artists: [\n        { name: \"\" }\n    ]\n}\n\nfunction WebPlayback(props) {\n\n    const [player, setPlayer] = useState(undefined);\n    const [is_paused, setPaused] = useState(false);\n    const [is_active, setActive] = useState(false);\n    const [current_track, setTrack] = useState(track);\n    const [device, setDevice] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [Track, setCurTrack] = useState([]);\n    const [playbackState, setPlaybackState] = useState({});\n\n    const getDevice = async () => {\n        const response = await axios.get('https://api.spotify.com/v1/me/player/devices', {\n            headers: {\n                Authorization: `Bearer ${props.token}`\n            }\n        });\n        setDevice(response.data.devices);\n    }\n\n    const getplayingTrack = async () => {\n        const response = await axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n            headers: {\n                Authorization: `Bearer ${props.token}`\n            }\n        });\n        setCurTrack(response.data.item);\n    }\n\n    const PlayState = async () => {\n        const response = await axios.get('https://api.spotify.com/v1/me/player', {\n            headers: {\n                Authorization: `Bearer ${props.token}`\n            }\n        });\n        console.log('PlayState', response.data)\n        setPlaybackState('state', response.data);\n    }\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    // getplayingTrack();\n\n    useEffect(() => {\n\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n\n            const player = new window.Spotify.Player({\n                name: 'My_extension',\n                getOAuthToken: cb => { cb(props.token); },\n                volume: 0.3\n            });\n\n            setPlayer(player);\n\n            player.connect().then(success => {\n                if (success) {\n                    console.log('The Web Playback SDK successfully connected to Spotify!');\n                }\n            });\n\n            player.addListener('ready', ({ device_id }) => {\n                console.log('Ready with Device ID', device_id);\n            });\n            \n            player.addListener('not_ready', ({ device_id }) => {\n                console.log('Device ID has gone offline', device_id);\n            });\n\n            player.addListener('player_state_changed', ( state => {\n                if (!state) {\n                    return;\n                }\n            \n                setTrack(state.track_window.current_track);\n                setPaused(state.paused);\n            \n                player.getCurrentState().then( state => {\n                    (!state)? setActive(false): setActive(true);\n                });\n            }));\n            \n            player.connect();\n        };\n        getDevice();\n        PlayState();\n        // if (Track) {\n        //     setTrack(Track);\n        // }\n        // console.log('Track', Track)\n    }, []);\n\n    // const renderDevice = () => {\n    //     // return device.map(devices => (\n    //     //     <div key={devices.id}>\n    //     //         { <p>{devices.name}</p>}\n    //     //         { <p>{devices.type}</p>}\n    //     //     </div>\n    //     // ))\n    //     return <div>\n    //         <Dropdown onClick={toggle}>\n    //         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    //             Devices\n    //         </Dropdown.Toggle>\n    //         <Dropdown.Menu open={isOpen}>\n    //             {device.map((device) => (\n    //             <Dropdown.Item clakey={device.id}>\n    //                 {device.name} ({device.type})\n    //             </Dropdown.Item>\n    //             ))}\n    //         </Dropdown.Menu>\n    //         </Dropdown>\n    //   </div>\n    // }\n\n    // console.log('deviceHEHE', device)\n    // console.log('Track', Track)\n    return (\n        <html>\n            <header className=\"App-header\">\n            <body className='App'>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n                        <img src={current_track.album.images[0].url} \n                            className=\"now-playing__cover\" alt=\"\" />\n            \n                        <div className=\"now-playing__side\">\n                            <div className=\"now-playing__name\">{current_track.name}</div>\n                            <div className=\"now-playing__artist\">{current_track.artists[0].name}</div>\n\n                                <button className=\"btn-spotify\" onClick={() => { player.previousTrack() }} >\n                                    &lt;&lt;\n                                </button>\n                                <button className=\"btn-spotify\" onClick={() => { player.togglePlay() }} >\n                                    { is_paused ? \"PLAY\" : \"PAUSE\" }\n                                </button>\n\n                                <button className=\"btn-spotify\" onClick={() => { player.nextTrack() }} >\n                                    &gt;&gt;\n                                </button>\n                                {/* {renderDevice()} */}\n                            </div>\n                    </div>\n                </div>\n            </body>\n            </header>\n         </html>\n    );\n}\n\nexport default WebPlayback\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC;AAE3C,MAAMC,KAAK,GAAG;EACVC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;IACHC,MAAM,EAAE,CACJ;MAAEC,GAAG,EAAE;IAAG,CAAC;EAEnB,CAAC;EACDC,OAAO,EAAE,CACL;IAAEJ,IAAI,EAAE;EAAG,CAAC;AAEpB,CAAC;AAED,SAASK,WAAW,CAACC,KAAK,EAAE;EAAA;EAExB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACc,SAAS,CAAC;EAC/C,MAAM,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACiB,SAAS,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACmB,aAAa,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAACI,KAAK,CAAC;EACjD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACyB,KAAK,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAM6B,SAAS,GAAG,YAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,8CAA8C,EAAE;MAC7EC,OAAO,EAAE;QACLC,aAAa,EAAG,UAAStB,KAAK,CAACuB,KAAM;MACzC;IACJ,CAAC,CAAC;IACFZ,SAAS,CAACQ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;EACpC,CAAC;EAED,MAAMC,eAAe,GAAG,YAAY;IAChC,MAAMP,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,wDAAwD,EAAE;MACvFC,OAAO,EAAE;QACLC,aAAa,EAAG,UAAStB,KAAK,CAACuB,KAAM;MACzC;IACJ,CAAC,CAAC;IACFR,WAAW,CAACI,QAAQ,CAACK,IAAI,CAACG,IAAI,CAAC;EACnC,CAAC;EAED,MAAMC,SAAS,GAAG,YAAY;IAC1B,MAAMT,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,sCAAsC,EAAE;MACrEC,OAAO,EAAE;QACLC,aAAa,EAAG,UAAStB,KAAK,CAACuB,KAAM;MACzC;IACJ,CAAC,CAAC;IACFM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEX,QAAQ,CAACK,IAAI,CAAC;IACvCP,gBAAgB,CAAC,OAAO,EAAEE,QAAQ,CAACK,IAAI,CAAC;EAC5C,CAAC;EAED,MAAMO,MAAM,GAAG,MAAMlB,SAAS,CAAC,CAACD,MAAM,CAAC;;EAEvC;;EAEAtB,SAAS,CAAC,MAAM;IAEZ,MAAM0C,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,uCAAuC;IACpDH,MAAM,CAACI,KAAK,GAAG,IAAI;IAEnBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;IAEjCO,MAAM,CAACC,4BAA4B,GAAG,MAAM;MAExC,MAAMvC,MAAM,GAAG,IAAIsC,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;QACrChD,IAAI,EAAE,cAAc;QACpBiD,aAAa,EAAEC,EAAE,IAAI;UAAEA,EAAE,CAAC5C,KAAK,CAACuB,KAAK,CAAC;QAAE,CAAC;QACzCsB,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF3C,SAAS,CAACD,MAAM,CAAC;MAEjBA,MAAM,CAAC6C,OAAO,EAAE,CAACC,IAAI,CAACC,OAAO,IAAI;QAC7B,IAAIA,OAAO,EAAE;UACTnB,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;QAC1E;MACJ,CAAC,CAAC;MAEF7B,MAAM,CAACgD,WAAW,CAAC,OAAO,EAAE,QAAmB;QAAA,IAAlB;UAAEC;QAAU,CAAC;QACtCrB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEoB,SAAS,CAAC;MAClD,CAAC,CAAC;MAEFjD,MAAM,CAACgD,WAAW,CAAC,WAAW,EAAE,SAAmB;QAAA,IAAlB;UAAEC;QAAU,CAAC;QAC1CrB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEoB,SAAS,CAAC;MACxD,CAAC,CAAC;MAEFjD,MAAM,CAACgD,WAAW,CAAC,sBAAsB,EAAIE,KAAK,IAAI;QAClD,IAAI,CAACA,KAAK,EAAE;UACR;QACJ;QAEA1C,QAAQ,CAAC0C,KAAK,CAACC,YAAY,CAAC5C,aAAa,CAAC;QAC1CH,SAAS,CAAC8C,KAAK,CAACE,MAAM,CAAC;QAEvBpD,MAAM,CAACqD,eAAe,EAAE,CAACP,IAAI,CAAEI,KAAK,IAAI;UACnC,CAACA,KAAK,GAAG5C,SAAS,CAAC,KAAK,CAAC,GAAEA,SAAS,CAAC,IAAI,CAAC;QAC/C,CAAC,CAAC;MACN,CAAC,CAAE;MAEHN,MAAM,CAAC6C,OAAO,EAAE;IACpB,CAAC;IACD5B,SAAS,EAAE;IACXU,SAAS,EAAE;IACX;IACA;IACA;IACA;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACI;IAAA,uBACI;MAAQ,SAAS,EAAC,YAAY;MAAA,uBAC9B;QAAM,SAAS,EAAC,KAAK;QAAA,uBACjB;UAAK,SAAS,EAAC,WAAW;UAAA,uBACtB;YAAK,SAAS,EAAC,cAAc;YAAA,wBACzB;cAAK,GAAG,EAAEpB,aAAa,CAACb,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;cACxC,SAAS,EAAC,oBAAoB;cAAC,GAAG,EAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG,eAE5C;cAAK,SAAS,EAAC,mBAAmB;cAAA,wBAC9B;gBAAK,SAAS,EAAC,mBAAmB;gBAAA,UAAEW,aAAa,CAACd;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAO,eAC7D;gBAAK,SAAS,EAAC,qBAAqB;gBAAA,UAAEc,aAAa,CAACV,OAAO,CAAC,CAAC,CAAC,CAACJ;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAO,eAEtE;gBAAQ,SAAS,EAAC,aAAa;gBAAC,OAAO,EAAE,MAAM;kBAAEO,MAAM,CAACsD,aAAa,EAAE;gBAAC,CAAE;gBAAA,UAAE;cAE5E;gBAAA;gBAAA;gBAAA;cAAA,QAAS,eACT;gBAAQ,SAAS,EAAC,aAAa;gBAAC,OAAO,EAAE,MAAM;kBAAEtD,MAAM,CAACuD,UAAU,EAAE;gBAAC,CAAE;gBAAA,UACjEpD,SAAS,GAAG,MAAM,GAAG;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QACzB,eAET;gBAAQ,SAAS,EAAC,aAAa;gBAAC,OAAO,EAAE,MAAM;kBAAEH,MAAM,CAACwD,SAAS,EAAE;gBAAC,CAAE;gBAAA,UAAE;cAExE;gBAAA;gBAAA;gBAAA;cAAA,QAAS;YAAA;cAAA;cAAA;cAAA;YAAA,QAEP;UAAA;YAAA;YAAA;YAAA;UAAA;QACR;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACL;AAEhB;AAAC,GA1JQ1D,WAAW;AAAA,KAAXA,WAAW;AA4JpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}