{"ast":null,"code":"var _jsxFileName = \"/home/sachamrt/projects/my_extension/src/WebPlayback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst track = {\n  name: \"\",\n  album: {\n    images: [{\n      url: \"\"\n    }]\n  },\n  artists: [{\n    name: \"\"\n  }]\n};\nfunction WebPlayback(props) {\n  _s();\n  const [player, setPlayer] = useState(undefined);\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [current_track, setTrack] = useState(track);\n  const [current_device, setDevice] = useState(undefined);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'My_extension',\n        getOAuthToken: cb => {\n          cb(props.token);\n        },\n        volume: 0.5\n      });\n      setPlayer(player);\n      player.addListener('ready', _ref => {\n        let {\n          device_id\n        } = _ref;\n        console.log('Ready with Device ID', device_id);\n      });\n      player.addListener('not_ready', _ref2 => {\n        let {\n          device_id\n        } = _ref2;\n        console.log('Device ID has gone offline', device_id);\n      });\n      player.addListener('player_state_changed', state => {\n        if (!state) {\n          return;\n        }\n        setTrack(state.track_window.current_track);\n        setPaused(state.paused);\n        player.getCurrentState().then(state => {\n          !state ? setActive(false) : setActive(true);\n        });\n      });\n      player.connect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: current_track.album.images[0].url,\n            className: \"now-playing__cover\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"now-playing__side\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__name\",\n              children: current_track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__artist\",\n              children: current_track.artists[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-spotify\",\n              onClick: () => {\n                player.previousTrack();\n              },\n              children: \"<<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-spotify\",\n              onClick: () => {\n                player.togglePlay();\n              },\n              children: is_paused ? \"PLAY\" : \"PAUSE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-spotify\",\n              onClick: () => {\n                player.nextTrack();\n              },\n              children: \">>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-spotify\",\n            onClick: () => {},\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(WebPlayback, \"vaLcnht6j1/Ux2CY12rLfikxDOE=\");\n_c = WebPlayback;\nexport default WebPlayback;\nvar _c;\n$RefreshReg$(_c, \"WebPlayback\");","map":{"version":3,"names":["React","useState","useEffect","track","name","album","images","url","artists","WebPlayback","props","player","setPlayer","undefined","is_paused","setPaused","is_active","setActive","current_track","setTrack","current_device","setDevice","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","cb","token","volume","addListener","device_id","console","log","state","track_window","paused","getCurrentState","then","connect","previousTrack","togglePlay","nextTrack"],"sources":["/home/sachamrt/projects/my_extension/src/WebPlayback.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst track = {\n    name: \"\",\n    album: {\n        images: [\n            { url: \"\" }\n        ]\n    },\n    artists: [\n        { name: \"\" }\n    ]\n}\n\nfunction WebPlayback(props) {\n\n    const [player, setPlayer] = useState(undefined);\n    const [is_paused, setPaused] = useState(false);\n    const [is_active, setActive] = useState(false);\n    const [current_track, setTrack] = useState(track);\n    const [current_device, setDevice] = useState(undefined);\n\n    useEffect(() => {\n\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        window.onSpotifyWebPlaybackSDKReady = () => {\n\n            const player = new window.Spotify.Player({\n                name: 'My_extension',\n                getOAuthToken: cb => { cb(props.token); },\n                volume: 0.5\n            });\n\n            setPlayer(player);\n\n            player.addListener('ready', ({ device_id }) => {\n                console.log('Ready with Device ID', device_id);\n            });\n\n            player.addListener('not_ready', ({ device_id }) => {\n                console.log('Device ID has gone offline', device_id);\n            });\n\n            player.addListener('player_state_changed', ( state => {\n\n                if (!state) {\n                    return;\n                }\n            \n                setTrack(state.track_window.current_track);\n                setPaused(state.paused);\n            \n                player.getCurrentState().then( state => {\n                    (!state)? setActive(false): setActive(true);\n                });\n            }));\n\n            player.connect();\n        };\n    }, []);\n\n    return (\n        <html>\n            <body>\n                <div className=\"container\">\n                    <div className=\"main-wrapper\">\n                        <img src={current_track.album.images[0].url} \n                            className=\"now-playing__cover\" alt=\"\" />\n        \n                        <div className=\"now-playing__side\">\n                            <div className=\"now-playing__name\">{current_track.name}</div>\n                            <div className=\"now-playing__artist\">{current_track.artists[0].name}</div>\n\n                            <button className=\"btn-spotify\" onClick={() => { player.previousTrack() }} >\n                                &lt;&lt;\n                            </button>\n\n                            <button className=\"btn-spotify\" onClick={() => { player.togglePlay() }} >\n                                { is_paused ? \"PLAY\" : \"PAUSE\" }\n                            </button>\n\n                            <button className=\"btn-spotify\" onClick={() => { player.nextTrack() }} >\n                                &gt;&gt;\n                            </button>\n                        </div>\n                        <button className=\"btn-spotify\" onClick={() => { }} >\n                            Disconnect\n                        </button>\n                    </div>\n                </div>\n            </body>\n         </html>\n    );\n}\n\nexport default WebPlayback\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}